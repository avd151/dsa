/*
Question: Partition List
Link: https://leetcode.com/problems/partition-list/description/
*/

class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* first = new ListNode();
        ListNode* curFirst = first;
        ListNode* second = new ListNode();
        ListNode* curSecond = second;
        while(head){
      //store nodes having val less than x, in first list
            if(head->val < x){
                curFirst->next = new ListNode(head->val);
                curFirst = curFirst->next;
            }
      //and remaining nodes in second list
            else{
                curSecond->next = new ListNode(head->val);
                curSecond = curSecond->next;
            }
            head = head->next;
        }
        curFirst->next = second->next;
        return first->next;
    }
};
